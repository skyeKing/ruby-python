ruby是纯面向对面编程的语言，其开发文档链接为：
	http://doc.rubyfans.com/
1：多字符
	ruby 		不允许 2*'a'
	python 		允许 2*'a' 输出为'aa'

2：打印输出
	ruby		打印输出使用puts() 命令, 小括号可以加，可以不加
	python		打印输出使用print  命令，尽量添加小括号

3：格式名
	ruby 		文件格式为rb
	python		文件格式为py

4：跨行注释
	ruby		 =begin =end
	python 		 ''' '''

5：ruby和python的四则运算使用方式相同，同样的
	例如：9/2   return 4
		  9.0/2 return 4.5
	对于ruby可以使用9.to_f/2 return 4.5

6：单引号和双引号
	python 中''和""没有太大区别，可以嵌套使用，
	ruby   中''相当于python的r'',而""表示字符串

7：字串内插（格式化输出）
	ruby 	格式化输出为 '#{variableName}'
	python	格式化输出为 '%s%d%f.2'%(string,int,float)

8：数据相加
	ruby和python 都不支持不同类型的数据相加 
		对于ruby：12 + "12".to_i = 24
				  "12" + 12.to_s = "1212"
		对于python：12 + int("12") = 24
					"12" + str(12) = "1212"
9：类型转换
	ruby："12".to_i result 12
			  "12abc".to_i result 12
	python：int("12") result 12
			int("12abc") 报错
10:切片操作
	ruby：不支持切片操作，如
			var1 = "abc"
			puts(var1[:2])
	python：可以使用切片操作字符和字符串

11：字符串大小写转换
	例如：声明 var1 = "stop"
	ruby：var1.upcase result "STOP"
	python: var1.upper() result "STOP"

12：数据类型判断
	ruby："var".class return String
	python：type("var") return <type 'str'>


13：循环（简化）
	ruby：6.times do
		      puts("a")
		  end
		  result "a" "a" "a" "a" "a" "a"
	python：for i in range(6):
				print("a")
			result "a" "a" "a" "a" "a" "a" 

14：变量、常量声明
	ruby：foo = 1 声明一个变量foo 其值为1 即在之后可以进行修改
		  Foo = 2 声明一个常量Foo 其值为1 如果之后赋值 其会警告 但是会完成赋值操作
		  		  O__O "........."
	python：只有变量 没有常量

15：内嵌命令
	ruby：ENV 返回操作系统的环境变量
		  RUBY_PLATFORM 返回ruby版本